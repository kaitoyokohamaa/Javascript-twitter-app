/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/js/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/js/index.js":
/*!*************************!*\
  !*** ./src/js/index.js ***!
  \*************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _models_userlogin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./models/userlogin */ \"./src/js/models/userlogin.js\");\n\nconst getId = window.localStorage.getItem('id');\nconst getChatRoomId = window.localStorage.getItem('chatRoomId');\nconsole.log(getChatRoomId)\nconst sendHttpRequest = (method, url, data) => {\n  return fetch(url, {\n    method: method,\n    body: JSON.stringify(data),\n    headers: data ? {\n      'Content-Type': 'application/json'\n    } : {}\n  }).then(response => {\n    if (response.status >= 400) {\n      // !response.ok\n      return response.json().then(errResData => {\n        const error = new Error('Something went wrong!');\n        error.data = errResData;\n        throw error;\n      });\n    }\n    return response.json();\n  });\n};\nconst sendData = () => {\n  sendHttpRequest('POST', 'https://teachapi.herokuapp.com/sign_up', {\n      \"sign_up_user_params\": {\n        \"name\": _models_userlogin__WEBPACK_IMPORTED_MODULE_0__[\"user_name\"].value,\n        \"bio\": _models_userlogin__WEBPACK_IMPORTED_MODULE_0__[\"user_bio\"].value,\n        \"email\": _models_userlogin__WEBPACK_IMPORTED_MODULE_0__[\"user_mail\"].value,\n        \"password\": _models_userlogin__WEBPACK_IMPORTED_MODULE_0__[\"user_pass\"].value,\n        \"password_confirmation\": _models_userlogin__WEBPACK_IMPORTED_MODULE_0__[\"user_confirmpass\"].value\n      }\n    })\n    .then(json => {\n      //ユーザ生成時に以下の情報をローカルストレージに入れる。\n      localStorage.token = json.token,\n        localStorage.id = json.id,\n        localStorage.name = json.name,\n        localStorage.bio = json.bio\n      window.location.href = 'timeline.html';\n    })\n    .then(responseData => {\n      console.log(responseData);\n    })\n\n    .catch(err => {\n      console.log(err, err.data);\n    });\n};\n\nif (_models_userlogin__WEBPACK_IMPORTED_MODULE_0__[\"postBtn\"]) {\n  _models_userlogin__WEBPACK_IMPORTED_MODULE_0__[\"postBtn\"].addEventListener('click', sendData);\n}\n\n\n// ユーザーログイン\nconst sendHttpRequestlg = (method, url, data) => {\n  return fetch(url, {\n    method: method,\n    body: JSON.stringify(data),\n    headers: data ? {\n      'Content-Type': 'application/json'\n    } : {}\n  }).then(response => {\n    if (response.status >= 400) {\n      // !response.ok\n      return response.json().then(errResData => {\n        const error = new Error('Something went wrong!');\n        error.data = errResData;\n        throw error;\n      });\n    }\n    return response.json();\n  });\n};\nconst sendlgData = () => {\n  sendHttpRequestlg('POST', 'https://teachapi.herokuapp.com/sign_in', {\n      \"sign_in_user_params\": {\n        \"email\": _models_userlogin__WEBPACK_IMPORTED_MODULE_0__[\"user_maillg\"].value,\n        \"password\": _models_userlogin__WEBPACK_IMPORTED_MODULE_0__[\"user_pass\"].value,\n        \"password_confirmation\": _models_userlogin__WEBPACK_IMPORTED_MODULE_0__[\"user_confirmpass\"].value\n      }\n    })\n    .then(json => {\n      localStorage.token = json.token,\n        localStorage.id = json.id,\n        localStorage.name = json.name,\n        localStorage.bio = json.bio\n      window.location.href = 'timeline.html';\n    })\n    .then(responseData => {\n      console.log(responseData);\n    })\n\n    .catch(err => {\n      console.log(err, err.data);\n    });\n};\nif (_models_userlogin__WEBPACK_IMPORTED_MODULE_0__[\"postlgBtn\"]) {\n  _models_userlogin__WEBPACK_IMPORTED_MODULE_0__[\"postlgBtn\"].addEventListener('click', sendlgData);\n}\n\n// ユーザー一覧\nconst getinfo = document.getElementById('post-lgtbtn');\n\nconst url = 'https://teachapi.herokuapp.com/users';\n\nif (!localStorage.token) {\n  window.location.href = 'login.html';\n}\nconst sendHttpRequestlgt = (method, url) => {\n  return fetch(url, {\n      method: method,\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.token\n      }\n    })\n    .then(response => {\n      if (response.status >= 400) {\n        // !response.ok\n        return response.json()\n          .then(errResData => {\n            const error = new Error('Something went wrong!');\n            error.data = errResData;\n            throw error;\n          });\n      }\n      return response.json();\n    });\n};\nconst sendlgdData = () => {\n  sendHttpRequestlgt('GET', url)\n    .then(json => {\n      let markup = \"\";\n      json.forEach(element => {\n        markup += `<div class=\"col mb-4\"><div class=\"card h-100\"><img src=\"img/ryusei.jpg\" class=\"card-img-top\" alt=\"...\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">${element.name}</h5>\n           <p class=\"acount\">＠${element.id}</p>\n          <p class=\"card-text\">${element.bio}</p>\n          <p class=\"card-text\"><a href=\"fix.html\">ユーザー編集</a></p>\n        </div>\n      </div>\n    </div>`;\n      });\n      let h = document.getElementById('userrs');\n      h.insertAdjacentHTML('beforeend', markup);\n      console.log(json.stringify);\n    })\n    .then(responseData => {\n      console.log(responseData);\n    })\n    .catch(err => {\n      console.log(err, err.data);\n    });\n};\nif (getinfo) {\n  getinfo.addEventListener('click', sendlgdData);\n}\n// ユーザー編集\nconst sendHttpRequestlge = (method, url, data) => {\n  return fetch(url, {\n    method: method,\n    body: JSON.stringify(data),\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + localStorage.token\n    }\n  }).then(response => {\n    if (response.status >= 400) {\n      // !response.ok\n      return response.json().then(errResData => {\n        const error = new Error('Something went wrong!');\n        error.data = errResData;\n        throw error;\n      });\n    }\n    return response.json();\n  });\n};\nconst myID = localStorage.getItem('id');\nconsole.log(myID)\nconst newurl = `https://teachapi.herokuapp.com/users/${myID}`\nconsole.log(newurl)\n\nconst jsendlgDatas = () => {\n  sendHttpRequestlge('PUT', newurl, {\n      \"user_params\": {\n        \"name\": document.getElementById('rename').value,\n        \"bio\": document.getElementById('rebio').value,\n      }\n    })\n    .then(json => {\n      localStorage.name = json.name,\n        localStorage.bio = json.bio\n      window.location.href = 'user.html';\n    })\n    .then(responseData => {\n      console.log(responseData);\n    })\n\n    .catch(err => {\n      console.log(err, err.data);\n    });\n};\nconst popo = document.getElementById('post-lgtbtnr')\nif (popo) {\n  popo.addEventListener('click', jsendlgDatas);\n}\n\n//アカウントの削除\nconst sendHttpRequesdtlge = (method, url, data) => {\n  return fetch(url, {\n    method: method,\n    body: JSON.stringify(data),\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + localStorage.token\n    }\n  }).then(response => {\n    if (response.status >= 400) {\n      // !response.ok\n      return response.json().then(errResData => {\n        const error = new Error('Something went wrong!');\n        error.data = errResData;\n        throw error;\n      });\n    }\n    return response.json();\n  });\n};\n\nconst jsendlgDatasc = () => {\n  sendHttpRequesdtlge('DELETE', newurl, )\n    .then(json => {\n      localStorage.name = json.name,\n        localStorage.bio = json.bio\n      window.location.href = 'user.html';\n    })\n    .then(responseData => {\n      console.log(responseData);\n    })\n\n    .catch(err => {\n      console.log(err, err.data);\n    });\n};\nconst poppoo = document.getElementById('post-lgldbtn')\nif (poppoo) {\n  poppoo.addEventListener('click', jsendlgDatasc);\n}\n//投稿\nconst sendfHttpRequestlg = (method, url, data) => {\n  return fetch(url, {\n    method: method,\n    body: JSON.stringify(data),\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + localStorage.token\n    }\n  }).then(response => {\n    if (response.status >= 400) {\n      // !response.ok\n      return response.json().then(errResData => {\n        const error = new Error('Something went wrong!');\n        error.data = errResData;\n        throw error;\n      });\n    }\n    return response.json();\n  });\n};\nconsole.log(localStorage.token)\nconst sendflgData = () => {\n  sendfHttpRequestlg('POST', 'https://teachapi.herokuapp.com/posts', {\n      \"post_params\": {\n        \"text\": document.getElementById('postpost').value,\n      }\n    })\n    .then(json => {\n      console.log(json)\n      window.location.href = 'timeline.html';\n    })\n    .then(responseData => {\n      console.log(responseData);\n    })\n\n    .catch(err => {\n      console.log(err, err.data);\n    });\n};\nconst postbttn = document.getElementById('post-lgvtbtnr')\nif (postbttn) {\n  postbttn.addEventListener('click', sendflgData);\n}\n// ユーザーのタイムライン\nconst MYurl = `https://teachapi.herokuapp.com/users/${myID}/timeline`;\n\nif (!localStorage.token) {\n  window.location.href = 'login.html';\n}\nconst sendHttpRequesftlgt = (method, url) => {\n  return fetch(url, {\n      method: method,\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.token\n      }\n    })\n    .then(response => {\n      if (response.status >= 400) {\n        // !response.ok\n        return response.json()\n          .then(errResData => {\n            const error = new Error('Something went wrong!');\n            error.data = errResData;\n            throw error;\n          });\n      }\n      return response.json();\n    });\n};\nconst senddlgdData = () => {\n  sendHttpRequesftlgt('GET', MYurl)\n    .then(json => {\n      console.log(json)\n      let markuped = \"\";\n      json.forEach(element => {\n        markuped += `<div class=\"twitter__block\">\n      <figure>\n          <img src=\"./img/ryusei.jpg\" />\n      </figure>\n      <div class=\"twitter__block-text\">\n          <div class=\"name\">${element.user.name}<span class=\"name_reply\">@${element.id}</span></div>\n          <div class=\"date\">${element.user.created_at}</div>\n          <div class=\"text\">\n              ${element.text}\n          </div>\n          <div class=\"twitter__icon\">\n              <span class=\"twitter-bubble\"></span>\n              <span class=\"twitter-loop\"></span>\n              <span class=\"twitter-heart\"></span>\n          </div>\n      </div>\n  </div>`;\n      });\n      let hd = document.getElementById('timeline');\n      hd.insertAdjacentHTML('beforeend', markuped);\n      console.log(json.stringify);\n    })\n    .then(responseData => {\n      console.log(responseData);\n    })\n    .catch(err => {\n      console.log(err, err.data);\n    });\n};\nconst timelinelogo = document.getElementById('logo')\nif (timelinelogo) {\n  timelinelogo.addEventListener('click', senddlgdData);\n}\n//投稿編集\nconst postrefix = document.getElementById(\"re_post\")\nif (postrefix) {\n  postrefix.addEventListener(\"click\", (event) => {\n    event.preventDefault();\n    const sendreposts = (method, url, data) => {\n      return fetch(url, {\n        method: method,\n        body: JSON.stringify(data),\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + localStorage.token\n        }\n      }).then(response => {\n        if (response.status >= 400) {\n          // !response.ok\n          return response.json().then(errResData => {\n            const error = new Error('Something went wrong!');\n            error.data = errResData;\n            throw error;\n          });\n        }\n        return response.json();\n      });\n    };\n    const edit_text_id = document.querySelector(\"#edit_text_id\").value;\n    console.log(edit_text_id)\n    const reposturl = `https://teachapi.herokuapp.com/posts/${edit_text_id}`;\n    const sendposts = () => {\n      sendreposts('PUT', reposturl, {\n          \"post_params\": {\n            \"text\": document.getElementById('repost').value,\n          }\n        })\n        .then(json => {\n          console.log(json)\n          localStorage.text = json.text;\n          window.location.href = 'timeline.html';\n        })\n        .then(responseData => {\n          console.log(responseData);\n        })\n\n        .catch(err => {\n          console.log(err, err.data);\n        });\n    };\n    const repost_btn = document.getElementById('re_post')\n    const result = document.getElementsByClassName('btn-success');\n    console.log(repost_btn)\n    console.log(result)\n    if (repost_btn) {\n      repost_btn.addEventListener('click', sendposts);\n    }\n  });\n}\n//投稿削除\nconst postdel = document.getElementById(\"del_post\")\nif (postdel) {\n  postdel.addEventListener(\"click\", (event) => {\n    event.preventDefault();\n    const deletrequest = (method, url, data) => {\n      return fetch(url, {\n        method: method,\n        body: JSON.stringify(data),\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + localStorage.token\n        }\n      }).then(response => {\n        if (response.status >= 400) {\n          // !response.ok\n          return response.json().then(errResData => {\n            const error = new Error('Something went wrong!');\n            error.data = errResData;\n            throw error;\n          });\n        }\n        return response.json();\n      });\n    };\n\n    const delet_text_id = document.querySelector(\"#edit_text_id\").value;\n    const deleteurl = `https://teachapi.herokuapp.com/posts/${delet_text_id}`\n\n    const deletefetched = () => {\n      deletrequest('DELETE', deleteurl, )\n        .then(json => {\n          console.log(json)\n          window.location.href = 'timeline.html';\n        })\n        .then(responseData => {\n          console.log(responseData);\n        })\n\n        .catch(err => {\n          console.log(err, err.data);\n        });\n    };\n    const del_posts = document.getElementById('del_post')\n    if (del_posts) {\n      del_posts.addEventListener('click', deletefetched);\n    }\n  });\n}\n//タイムラインのページを取得する。\nconst show_timeline = document.getElementById('timeline_submit')\nif (show_timeline) {\n  show_timeline.addEventListener(\"click\", (event) => {\n    event.preventDefault();\n    const users_pages = document.getElementById('pages').value;\n    const users_limits = document.getElementById('limits').value;\n    const users_querys = document.getElementById('querys').value;\n\n\n    const MY_url = `https://teachapi.herokuapp.com/posts?page=${users_pages}&limit=${users_limits}&query=${users_querys}`;\n\n    if (!localStorage.token) {\n      window.location.href = 'login.html';\n    }\n    const users_timeline = (method, url) => {\n      return fetch(url, {\n          method: method,\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + localStorage.token\n          }\n        })\n        .then(response => {\n          if (response.status >= 400) {\n            // !response.ok\n            return response.json()\n              .then(errResData => {\n                const error = new Error('Something went wrong!');\n                error.data = errResData;\n                throw error;\n              });\n          }\n          return response.json();\n        });\n    };\n    // const sendtimeline = () => {\n    users_timeline('GET', MY_url)\n      .then(json => {\n        console.log(json)\n        let time = \"\";\n        json.forEach(element => {\n          time += `<div class=\"twitter__block\">\n        <figure>\n            <img src=\"./img/ryusei.jpg\" />\n        </figure>\n        <div class=\"twitter__block-text\">\n            <div class=\"name\">${element.user.name}<span class=\"name_reply\">@${element.id}</span></div>\n            <div class=\"date\">${element.user.created_at}</div>\n            <div class=\"text\">\n                ${element.text}\n            </div>\n            <div class=\"twitter__icon\">\n                <span class=\"twitter-bubble\"></span>\n                <span class=\"twitter-loop\"></span>\n                <span class=\"twitter-heart\"></span>\n            </div>\n        </div>\n    </div>`;\n        });\n        let hd = document.getElementById('timeline');\n        hd.insertAdjacentHTML('beforeend', time);\n        console.log(json.stringify);\n      })\n      .then(responseData => {\n        console.log(responseData);\n      })\n      .catch(err => {\n        console.log(err, err.data);\n      });\n    // };\n    // const get_data = document.getElementById('timeline_submit')\n    // if (get_data) {\n    //   get_data.addEventListener('click', sendtimeline);\n    // }\n  });\n}\n//チャットルームの実装\nconst show_chat = document.getElementById('chatbtn')\nif (show_chat) {\n  show_chat.addEventListener(\"click\", (event) => {\n    event.preventDefault();\n    const chatrequest = (method, url, data) => {\n      return fetch(url, {\n        method: method,\n        body: JSON.stringify(data),\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + localStorage.token\n        }\n      }).then(response => {\n        if (response.status >= 400) {\n          // !response.ok\n          return response.json().then(errResData => {\n            const error = new Error('Something went wrong!');\n            error.data = errResData;\n            throw error;\n          });\n        }\n        return response.json();\n      });\n    };\n    console.log(localStorage.token)\n    const chat_name = document.getElementById('chattitle').value\n    const sendchatrequest = () => {\n      chatrequest('POST', 'https://teachapi.herokuapp.com/chatrooms', {\n          \"chatroom_params\": {\n            \"name\": chat_name\n          }\n        })\n        .then(json => {\n          console.log(json)\n          const chat_time = `<div id=\"title\" class=\"line__title\">\n        <a href=\"chat.html\"> ${json.name}</a>\n        </div> `;\n          const chatroom_posts = document.getElementById('chat_Btn');\n          chatroom_posts.insertAdjacentHTML('beforeend', chat_time);\n          window.location.href = 'all_chatroom.html';\n        })\n        .then(responseData => {\n          console.log(responseData);\n        })\n\n        .catch(err => {\n          console.log(err, err.data);\n        });\n    };\n    const chatBtn = document.getElementById('chatbtn')\n    if (chatBtn) {\n      chatBtn.addEventListener('click', sendchatrequest);\n    }\n  });\n}\n//チャットルームの一覧の作成\nconst show_chatroom = document.getElementById('Chatbtn')\nconsole.log(show_chatroom)\nif (show_chatroom) {\n  show_chatroom.addEventListener(\"click\", (event) => {\n    event.preventDefault();\n    const chat_pages = document.getElementById('chat_page').value;\n    const chat_limits = document.getElementById('chat_limit').value;\n    const chat_url = `https://teachapi.herokuapp.com/chatrooms?page=${chat_pages}&limit=${chat_limits}`;\n    console.log(chat_url)\n    if (!localStorage.token) {\n      window.location.href = 'login.html';\n    }\n    const users_chatname = (method, url) => {\n      return fetch(url, {\n          method: method,\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + localStorage.token\n          }\n        })\n        .then(response => {\n          if (response.status >= 400) {\n            // !response.ok\n            return response.json()\n              .then(errResData => {\n                const error = new Error('Something went wrong!');\n                error.data = errResData;\n                throw error;\n              });\n          }\n          return response.json();\n        });\n    };\n    const sendchatroom = () => {\n      users_chatname('GET', chat_url)\n        .then(json => {\n          console.log(json)\n          let chatime = \"\";\n          json.forEach(element => {\n            chatime += `<div class=\"col-lg-4\">\n            <div class=\"card\">\n              <img class=\"card-img-top\" src=\"./img/ozi.jpg\" alt=\"ライトコースのイメージ画像\">\n              <div class=\"card-body\">\n                <h4 class=\"card-title\">${element.name}</h4>\n                <a href=\"chat.html\" class=\"btn btn-primary\">👨‍❤️‍👨${element.id}番👨‍❤️‍👨</a>\n              </div>\n            </div>\n          </div> `;\n          });\n          let chahd = document.getElementById('row');\n          chahd.insertAdjacentHTML('beforeend', chatime);\n          console.log(json.stringify);\n        })\n        .then(responseData => {\n          console.log(responseData);\n        })\n        .catch(err => {\n          console.log(err, err.data);\n        });\n    };\n    const get_room = document.getElementById('Chatbtn')\n    if (get_room) {\n      get_room.addEventListener('click', sendchatroom);\n    }\n  });\n}\n//他人のチャットルームに参加する。\nconst show_chatroomids = document.getElementById('catrooms_btn')\nconsole.log(show_chatroom)\nif (show_chatroomids) {\n  show_chatroomids.addEventListener(\"click\", (event) => {\n    event.preventDefault();\n    const caht_Ids = document.getElementById('chat_ids').value;\n    const chat_idsurl = `https://teachapi.herokuapp.com/chatrooms/${caht_Ids}/join`;\n\n    const users_chatnameids = (method, url) => {\n      return fetch(url, {\n          method: method,\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + localStorage.token\n          }\n        })\n        .then(response => {\n          if (response.status >= 400) {\n            // !response.ok\n            return response.json()\n              .then(errResData => {\n                const error = new Error('Something went wrong!');\n                error.data = errResData;\n                throw error;\n              });\n          }\n          return response.json();\n        });\n    };\n    const sendchatroomids = () => {\n      users_chatnameids('POST', chat_idsurl)\n        .then(json => {\n          alert('参加しました');\n          window.location.href = 'chat.html';\n          console.log(json)\n        })\n        .then(responseData => {\n          console.log(responseData);\n        })\n        .catch(err => {\n          console.log(err, err.data);\n        });\n    };\n    const get_roomids = document.getElementById('catrooms_btn')\n    if (get_roomids) {\n      get_roomids.addEventListener('click', sendchatroomids);\n    }\n  });\n}\n//チャットないでメッセージを送る。\nconst show_chaids = document.getElementById('chatSubmit')\nconst get_roomstext = document.getElementById('chatSubmit')\nif (show_chaids) {\n  show_chaids.addEventListener(\"click\", (event) => {\n    event.preventDefault();\n    const users_chattext = (method, url, data) => {\n      return fetch(url, {\n          method: method,\n          body: JSON.stringify(data),\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + localStorage.token\n          }\n        })\n        .then(response => {\n          if (response.status >= 400) {\n            // !response.ok\n            return response.json()\n              .then(errResData => {\n                const error = new Error('Something went wrong!');\n                error.data = errResData;\n                throw error;\n              });\n          }\n          return response.json();\n        });\n    };\n    const cahts_Ids = document.getElementById('getid').value;\n    const chat_textsurl = `https://teachapi.herokuapp.com/chatrooms/${cahts_Ids}/messages`;\n    const chat_text = document.getElementById('messagecontent').value;\n    const sendchatroomtext = () => {\n      users_chattext('POST', chat_textsurl, {\n          \"message_params\": {\n            \"text\": chat_text\n          }\n        })\n        .then(json => {\n          console.log(json);\n          const chat_linetime = `<div class=\"line__right\">\n          <div class=\"text\">${json.text}</div>\n          <span class=\"date\">既読<br>0:30</span>\n        </div>`\n          const chatroom_chatposts = document.getElementById('chtat_line');\n          chatroom_chatposts.insertAdjacentHTML('beforeend', chat_linetime);\n        })\n        .then(responseData => {\n          console.log(responseData);\n        })\n        .catch(err => {\n          console.log(err, err.data);\n        });\n    };\n    if (get_roomstext) {\n      get_roomstext.addEventListener('click', sendchatroomtext);\n    }\n  });\n}\n//チャット内でのメッセージの取得\nif (show_chaids) {\n  show_chaids.addEventListener(\"click\", (event) => {\n    event.preventDefault();\n    const users_chatgettext = (method, url) => {\n      return fetch(url, {\n          method: method,\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + localStorage.token\n          }\n        })\n        .then(response => {\n          if (response.status >= 400) {\n            // !response.ok\n            return response.json()\n              .then(errResData => {\n                const error = new Error('Something went wrong!');\n                error.data = errResData;\n                throw error;\n              });\n          }\n          return response.json();\n        });\n    };\n    const params = {\n      id: '150'\n    }\n    const qs = new URLSearchParams(params);\n\n    // const cahts_getI = document.getElementById('getd').value;\n    const chat_textsgeturl = `https://teachapi.herokuapp.com/chatrooms/${getChatRoomId}/messages?${qs}`;\n    const sendchatroomgettext = () => {\n      users_chatgettext('GET', chat_textsgeturl)\n        .then(json => {\n          console.log(json);\n          let chatgets = \"\";\n          json.forEach(element => {\n            chatgets += `<div id=\"line_line\"> \n            <figure>\n            <img src=\"./img/ryusei.jpg\" />\n          </figure>\n          <div class=\"line__left-text\">\n            <div class=\"name\">${element.user.name}</div>\n            <div class=\"text\">${element.text}</div>\n          </div></div>`;\n          });\n          let chahdget = document.getElementById('line__left');\n          chahdget.insertAdjacentHTML('beforeend', chatgets);\n          console.log(json.stringify);\n        })\n        .then(responseData => {\n          console.log(responseData);\n        })\n        .catch(err => {\n          console.log(err, err.data);\n        });\n    };\n    if (get_roomstext) {\n      get_roomstext.addEventListener('click', sendchatroomgettext);\n    }\n  });\n}\n//フォロー機能\nconst post_dofollw = document.getElementById('post-following')\nif (post_dofollw) {\n  post_dofollw.addEventListener(\"click\", (event) => {\n    event.preventDefault();\n    const foloowgets = (method, url) => {\n      return fetch(url, {\n          method: method,\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + localStorage.token\n          }\n        })\n        .then(response => {\n          if (response.status >= 400) {\n            // !response.ok\n            return response.json()\n              .then(errResData => {\n                const error = new Error('Something went wrong!');\n                error.data = errResData;\n                throw error;\n              });\n          }\n          return response.json();\n        });\n    };\n    const cahts_getfollow = document.getElementById('getsfollow').value;\n    const chat_folowgeturl = `https://teachapi.herokuapp.com/users/${cahts_getfollow}/follow`;\n    const getsfollower = () => {\n      foloowgets('POST', chat_folowgeturl)\n        .then(json => {\n          alert(json.id + \"番をフォローしました。\");\n        })\n        .then(responseData => {\n          console.log(responseData);\n        })\n        .catch(err => {\n          console.log(err, err.data);\n        });\n    };\n\n    if (post_dofollw) {\n      post_dofollw.addEventListener('click', getsfollower);\n    }\n  });\n}\n//フォローを外す\nconst post_unfollw = document.getElementById('post-unfollowing')\nif (post_unfollw) {\n  post_unfollw.addEventListener(\"click\", (event) => {\n    event.preventDefault();\n    const unfoloowgets = (method, url) => {\n      return fetch(url, {\n          method: method,\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + localStorage.token\n          }\n        })\n        .then(response => {\n          if (response.status >= 400) {\n            // !response.ok\n            return response.json()\n              .then(errResData => {\n                const error = new Error('Something went wrong!');\n                error.data = errResData;\n                throw error;\n              });\n          }\n          return response.json();\n        });\n    };\n    const cahts_unfollow = document.getElementById('unfollow').value;\n    const chat_unfolowgeturl = `https://teachapi.herokuapp.com/users/${cahts_unfollow}/follow`;\n    const unfollower = () => {\n      unfoloowgets('DELETE', chat_unfolowgeturl)\n        .then(json => {\n          alert(json.id + \"番をアンフォローしました。\");\n        })\n        .then(responseData => {\n          console.log(responseData);\n        })\n        .catch(err => {\n          console.log(err, err.data);\n        });\n    };\n\n    if (post_unfollw) {\n      post_unfollw.addEventListener('click', unfollower);\n    }\n  });\n}\n// フォロ一覧を取得する\nconst nowfoloow = (method, url) => {\n  return fetch(url, {\n      method: method,\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.token\n      }\n    })\n    .then(response => {\n      if (response.status >= 400) {\n        // !response.ok\n        return response.json()\n          .then(errResData => {\n            const error = new Error('Something went wrong!');\n            error.data = errResData;\n            throw error;\n          });\n      }\n      return response.json();\n    });\n};\nconst chat_nowfolowgeturl = `https://teachapi.herokuapp.com/users/${getId}/followings`;\nconst nowfollowe = () => {\n  nowfoloow('GET', chat_nowfolowgeturl)\n    .then(json => {\n      console.log(json)\n      let marimgkup = \"\";\n      json.forEach(element => {\n        marimgkup += `<div class=\"col mb-4\"><div class=\"card h-100\"><img src=\"img/ryusei.jpg\" class=\"card-img-top\" alt=\"...\">\n            <div class=\"card-body\">\n              <h5 class=\"card-title\">${element.name}</h5>\n               <p class=\"acount\">＠${element.id}</p>\n              <p class=\"card-text\">${element.bio}</p>\n            </div>\n          </div>\n        </div>`;\n      });\n      let hed = document.getElementById('urs');\n      hed.insertAdjacentHTML('beforeend', marimgkup);\n      console.log(json.stringify);\n    })\n    .then(responseData => {\n      console.log(responseData);\n    })\n    .catch(err => {\n      console.log(err, err.data);\n    });\n};\nconst nowfolowinguser = document.getElementById('post-lgtbtnfollowing')\nif (nowfolowinguser) {\n  nowfolowinguser.addEventListener('click', nowfollowe);\n}\n\n// フォロワー覧を取得する\nconst nowfoloower= (method, url) => {\n  return fetch(url, {\n      method: method,\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.token\n      }\n    })\n    .then(response => {\n      if (response.status >= 400) {\n        // !response.ok\n        return response.json()\n          .then(errResData => {\n            const error = new Error('Something went wrong!');\n            error.data = errResData;\n            throw error;\n          });\n      }\n      return response.json();\n    });\n};\nconst chat_nowfolower = `https://teachapi.herokuapp.com/users/${getId}/followers`;\nconst nowfolloweer = () => {\n  nowfoloower('GET', chat_nowfolower)\n    .then(json => {\n      console.log(json)\n    })\n    .then(responseData => {\n      console.log(responseData);\n    })\n    .catch(err => {\n      console.log(err, err.data);\n    });\n};\nconst nowfoloweruser = document.getElementById('post-lgtbtnfollower')\nif (nowfoloweruser) {\n  nowfoloweruser.addEventListener('click', nowfolloweer);\n}\n\n//# sourceURL=webpack:///./src/js/index.js?");

/***/ }),

/***/ "./src/js/models/userlogin.js":
/*!************************************!*\
  !*** ./src/js/models/userlogin.js ***!
  \************************************/
/*! exports provided: postBtn, user_name, user_bio, user_mail, user_maillg, user_pass, user_confirmpass, postlgBtn */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"postBtn\", function() { return postBtn; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"user_name\", function() { return user_name; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"user_bio\", function() { return user_bio; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"user_mail\", function() { return user_mail; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"user_maillg\", function() { return user_maillg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"user_pass\", function() { return user_pass; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"user_confirmpass\", function() { return user_confirmpass; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"postlgBtn\", function() { return postlgBtn; });\n// いらない変数ども\nconst postBtn = document.getElementById('post-btn');\nconst user_name=document.getElementById('UserName');\nconst user_bio=document.getElementById('User');\nconst user_mail=document.getElementById('Email');\nconst user_maillg=document.getElementById('email');\nconst user_pass=document.getElementById('Password');\nconst user_confirmpass=document.getElementById('ConfirmPassword');\nconst postlgBtn = document.getElementById('post-lgbtn');\n\n\n\n\n//# sourceURL=webpack:///./src/js/models/userlogin.js?");

/***/ })

/******/ });